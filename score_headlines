import sys
import os
from datetime import datetime
from sentence_transformers import SentenceTransformer
import joblib

# 1. Parse command-line arguments
if len(sys.argv) != 3:
    print("Usage: python score_headlines.py <input_file> <source>")
    print("Example: python score_headlines.py headlines_nyt_2025-07-07.txt nyt")
    sys.exit(1)

input_file = sys.argv[1]
source = sys.argv[2]

# 2. Read headlines from input file
if not os.path.exists(input_file):
    print(f"Input file not found: {input_file}")
    sys.exit(1)

with open(input_file, "r") as f:
    headlines = [line.strip() for line in f if line.strip()]

if not headlines:
    print("No headlines found in the input file.")
    sys.exit(1)

# 3. Load sentence embedding model
try:
    model = SentenceTransformer("all-MiniLM-L6-v2")
except Exception as e:
    print("Failed to load SentenceTransformer model.")
    print(str(e))
    sys.exit(1)

# 4. Load pre-trained SVM classifier
if not os.path.exists("svm.joblib"):
    print("SVM model file 'svm.joblib' not found.")
    sys.exit(1)

clf = joblib.load("svm.joblib")

# 5. Vectorize and predict
vectors = model.encode(headlines)
predictions = clf.predict(vectors)

# 6. Output file
today_str = datetime.today().strftime("%Y_%m_%d")
output_file = f"headline_scores_{source}_{today_str}.txt"

with open(output_file, "w") as f:
    for label, headline in zip(predictions, headlines):
        f.write(f"{label},{headline}\n")

print(f"Sentiment scores written to: {output_file}")
